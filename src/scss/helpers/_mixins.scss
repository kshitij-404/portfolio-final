@mixin bp($bp) {

    @if $mq-support {

        @include media($bp) {

            @content;

        }

    }

    @else {

        @content;

    }

}

@mixin cover-image($image,$color) {
    
    background: $color url("#{$path-images}#{$image}") no-repeat center center fixed;
    @include prefixer(background-size, cover, webkit moz spec);

}

@mixin opacity($level,$important: false) {

    @if $browser == "ie" {

        -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=#{$level * 100})";

    }

    /* 
    @else if $browser == "ie-7" {
    
            filter: alpha(opacity=#{$level * 100});
    
        } 
    */

    @else {

        @if $important {

            opacity: $level + !important;

        } 

        @else {

            opacity: $level;

        }

    }

}

@mixin sprite($left: 0, $top: 0, $sprite: sprite) {

    background-color: transparent;
    background-repeat: no-repeat;

    @if $svg-support {

        background-image: url("../svg/#{$sprite}.svg");

    }

    @else {

        background-image: url("../png/#{$sprite}.png");

    }

    background-position: $left $top;

}

@mixin omega-reset($nth) {

    &:nth-child(#{$nth}) { margin-right: flex-gutter($grid-columns, $gutter); }
    &:nth-child(#{$nth}+1) { clear: none }

}

@mixin font-size($sizeValue: 16, $line: $sizeValue * 1.4, $important: "") {

    @if $rem-support {

        font-size: ($sizeValue / 16) + rem + $important;
        line-height: ($line / 16) + rem + $important;

    }

    @else {

        font-size: ($sizeValue) + px + $important;
        line-height: ($line) + px + $important;

    }

}

@mixin black-and-white() {
    
    filter: url("data:image/svg+xml;utf8,<svg%20xmlns=\'http://www.w3.org/2000/svg\'><filter%20id=\'grayscale\'><feColorMatrix%20type=\'matrix\'%20values=\'0.3333%200.3333%200.3333%200%200%200.3333%200.3333%200.3333%200%200%200.3333%200.3333%200.3333%200%200%200%200%200%201%200\'/></filter></svg>#grayscale");
    @include filter(grayscale(100%));
    
}

@mixin button($color: #fff) {
    
    @extend %text-uppercase;
    @extend %text-center;
    @extend %display-inline-block;
    @include font-size(12);
    @include padding(rem(15) rem(25));
    
    color: $color;
    cursor: pointer;
    border: 2px solid $color;
    border: 2px solid rgba(255,255,255,0.5);
    background: transparent;
    
    &:hover, &:focus {
        
        outline: none;
        background: transparent;
        border: 2px solid $color;
        
    }
    
}